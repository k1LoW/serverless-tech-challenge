service: ${self:provider.environment.SLSCONF_SERVICE_NAME}

provider:
  name: aws
  environment:
    SLSCONF_STAGE: ${env:SLSCONF_STAGE, 'v0'}
    SLSCONF_SERVICE_NAME: ${env:SLSCONF_SERVICE_NAME, 'slsconf-challenge'}
    SLSCONF_REGION: ${env:SLSCONF_REGION, 'ap-northeast-1'}
    S3_BUCKET_NAME: ${env:SLSCONF_S3_BUCKET_NAME, 'slsconf-challenge-fb993f'}
  runtime: nodejs6.10
  stage: ${self:provider.environment.SLSCONF_STAGE}
  region: ${self:provider.environment.SLSCONF_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource:
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${self:provider.environment.S3_BUCKET_NAME}"] ] }
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${self:provider.environment.S3_BUCKET_NAME}", "/*"] ] }
    - Effect: Allow
      Action:
        - "lambda:InvokeFunction"
        - "lambda:InvokeAsync"
      Resource:
        - "arn:aws:lambda:${self:provider.region}:*:function:${self:service}-${self:provider.stage}-*"
    - Effect: Allow
      Action:
        - "sqs:*"
      Resource:
        - "arn:aws:sqs:${self:provider.region}:*:${self:service}-${self:provider.stage}-Channel"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

package:
  include:
    - package.json
    - src/**
  exclude:
    - .git/**

functions:
  index:
    handler: src/index.handler
    events:
      - http:
          path: /
          method: get
  signup:
    handler: src/auth.signup
    events:
      - http:
          path: signup
          method: get
  activation:
    handler: src/auth.activation
    events:
      - http:
          path: activation
          method: get
  loginTest:
    handler: src/auth.login
    events:
      - http:
          path: login
          method: get
  recognize:
    handler: src/image.recognize
    events:
      - http:
          path: recognize
          method: get
  hello:
    handler: handler.hello
    events:
      - http:
          path: mypage
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:ap-northeast-1:079973668103:userpool/ap-northeast-1_bKLNdEwKU

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    HostingBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET_NAME}
        AccessControl: Private
